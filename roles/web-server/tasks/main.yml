---
- include_vars: ssl_keys.yml
- include_vars: ssl_certificates.yml

- apt: name={{item}} state=present
  with_items:
    - libjpeg-dev
    - libmagickwand-dev
    - python-dev
    - python-virtualenv
    - nginx
    - nodejs
    - npm
- apt: name=haskell-platform
  notify:
    - update cabal packages
    - build new cabal

- user: name={{item.name}} state=present shell=/bin/bash home=/home/{{item.name}}
  with_items: sites

- authorized_key: user={{item.name}} key="ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6q+NIMbgehuTQN/LymntUtqorU3qNqN05yXZKwgRYDapn8XLgJA3OGmfEcaMyK+0ry/US4Kl9fTk5H16YZ/ZTRbJfssVvbWSDTBP/ho1hhjpLEgHD3lmhuO27reypg5aawJpQBFzLKHDBUZ/sUOLawP9LVRiPp2Ve2mG+K3R+k6U9b2MaEIF3cfp3FU20wex/M9pce4a+PjmdM4Yvuy0Mn4MfuhpoLRfEBmI1qlwrqvCTeMK4OGufEQXpe+KmjBovMTKx142lm6XSTJ2JRtuOrSGqUaFFyzHSUSjLGwl1zjdjOafsJZvclyTt/dDB1RmX/Fr2YYk+EZN/a33agDJTQ== erincall@Slim.local"
  with_items: sites

- name: release directories
  file: dest=/home/{{item[0].name}}/{{item[1]}} state=directory owner={{item[0].name}}
  with_items: sites
  with_nested:
    - sites
    - ['shared/log', 'shared/pids', 'releases']

- include_vars: catsnap-env.yml
- name: catsnap dotenv file
  template: src=dotenv.j2 dest=/home/catsnap/shared/.env
              owner=catsnap group=catsnap mode=0400

- include_vars: identity-env.yml
- name: identity dotenv file
  template: src=dotenv.j2 dest=/home/identity/shared/.env
              owner=identity group=identity mode=0400

# I find with_subelements a little complex. It takes a list of attribute
# names representing a path to recurse down while forming a cross product.
# The numbers are the 0-indexed recursion depth, so here, item.1 is each
# service within each site. Whew!
- name: upstart services
  template: src={{item.1}}.conf.j2 dest=/etc/init/{{item.1}}.conf
          owner=root group=root mode=0400
  with_subelements:
    - sites
    - services

# This is a "diffie-helmann group", which uses a different large prime from
# the usual one so the NSA can't precompute its ...mathematical properties...
# and intercept the key-exchange (the "logjam" vulnerability).
# It's generated with `openssl dhparam -out dhparams.pem 2048`.
- name: copy dhparams.pem for ssl
  copy: src=dhparams.pem dest=/etc/ssl/dhparams.pem
        owner=root group=root mode=0444
  notify: restart nginx

- name: ecall ssl certificates
  template: src=ssl_certificate.j2 dest=/etc/ssl/{{item.key}}_erincall_com.chained.crt
            owner=root group=root mode=0444
  with_dict: ecall_ssl_certificates
  notify: restart nginx
  no_log: true # these aren't secret, but they're obnoxiously noisy

- name: alorente ssl certificates
  template: src=ssl_certificate.j2 dest=/etc/ssl/{{item.key}}_andrewlorente_com.chained.crt
            owner=root group=root mode=0444
  with_dict: alorente_ssl_certificates
  notify: restart nginx
  no_log: true # these aren't secret, but they're obnoxiously noisy

- name: ecall ssl keys
  template: src=ssl_key.j2 dest=/etc/ssl/{{item.key}}_erincall_com.key
            owner=root group=root mode=0400
  with_dict: ecall_ssl_keys
  notify: restart nginx
  no_log: true

- name: alorente ssl keys
  template: src=ssl_key.j2 dest=/etc/ssl/{{item.key}}_andrewlorente_com.key
            owner=root group=root mode=0400
  with_dict: alorente_ssl_keys
  notify: restart nginx
  no_log: true

- name: nginx conf
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf owner=root mode=0444
            validate="/usr/sbin/nginx -c %s -t"
  notify: restart nginx
